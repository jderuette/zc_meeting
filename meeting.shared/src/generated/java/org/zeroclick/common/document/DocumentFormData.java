package org.zeroclick.common.document;

import java.util.Date;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "org.zeroclick.common.document.DocumentForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class DocumentFormData extends AbstractFormData {

	private static final long serialVersionUID = 1L;

	public Content getContent() {
		return getFieldByClass(Content.class);
	}

	/**
	 * access method for property ContentData.
	 */
	public byte[] getContentData() {
		return getContentDataProperty().getValue();
	}

	/**
	 * access method for property ContentData.
	 */
	public void setContentData(byte[] contentData) {
		getContentDataProperty().setValue(contentData);
	}

	public ContentDataProperty getContentDataProperty() {
		return getPropertyByClass(ContentDataProperty.class);
	}

	public DocumentId getDocumentId() {
		return getFieldByClass(DocumentId.class);
	}

	public LastModificationDate getLastModificationDate() {
		return getFieldByClass(LastModificationDate.class);
	}

	public LinkedRole getLinkedRole() {
		return getFieldByClass(LinkedRole.class);
	}

	public Name getName() {
		return getFieldByClass(Name.class);
	}

	public static class Content extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class ContentDataProperty extends AbstractPropertyData<byte[]> {

		private static final long serialVersionUID = 1L;
	}

	public static class DocumentId extends AbstractValueFieldData<Long> {

		private static final long serialVersionUID = 1L;
	}

	public static class LastModificationDate extends AbstractValueFieldData<Date> {

		private static final long serialVersionUID = 1L;
	}

	public static class LinkedRole extends AbstractTableFieldBeanData {

		private static final long serialVersionUID = 1L;

		@Override
		public LinkedRoleRowData addRow() {
			return (LinkedRoleRowData) super.addRow();
		}

		@Override
		public LinkedRoleRowData addRow(int rowState) {
			return (LinkedRoleRowData) super.addRow(rowState);
		}

		@Override
		public LinkedRoleRowData createRow() {
			return new LinkedRoleRowData();
		}

		@Override
		public Class<? extends AbstractTableRowData> getRowType() {
			return LinkedRoleRowData.class;
		}

		@Override
		public LinkedRoleRowData[] getRows() {
			return (LinkedRoleRowData[]) super.getRows();
		}

		@Override
		public LinkedRoleRowData rowAt(int index) {
			return (LinkedRoleRowData) super.rowAt(index);
		}

		public void setRows(LinkedRoleRowData[] rows) {
			super.setRows(rows);
		}

		public static class LinkedRoleRowData extends AbstractTableRowData {

			private static final long serialVersionUID = 1L;
			public static final String roleId = "roleId";
			public static final String startDate = "startDate";
			public static final String documentId = "documentId";
			private Long m_roleId;
			private Date m_startDate;
			private Long m_documentId;

			public Long getRoleId() {
				return m_roleId;
			}

			public void setRoleId(Long newRoleId) {
				m_roleId = newRoleId;
			}

			public Date getStartDate() {
				return m_startDate;
			}

			public void setStartDate(Date newStartDate) {
				m_startDate = newStartDate;
			}

			public Long getDocumentId() {
				return m_documentId;
			}

			public void setDocumentId(Long newDocumentId) {
				m_documentId = newDocumentId;
			}
		}
	}

	public static class Name extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}
}
