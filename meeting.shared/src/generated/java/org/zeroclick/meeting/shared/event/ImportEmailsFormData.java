package org.zeroclick.meeting.shared.event;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "org.zeroclick.meeting.client.event.ImportEmailsForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class ImportEmailsFormData extends AbstractFormData {

	private static final long serialVersionUID = 1L;

	public AppendToExisting getAppendToExisting() {
		return getFieldByClass(AppendToExisting.class);
	}

	public ImportedEmailPreview getImportedEmailPreview() {
		return getFieldByClass(ImportedEmailPreview.class);
	}

	public RawData getRawData() {
		return getFieldByClass(RawData.class);
	}

	public ValueSeparator getValueSeparator() {
		return getFieldByClass(ValueSeparator.class);
	}

	public static class AppendToExisting extends AbstractValueFieldData<Boolean> {

		private static final long serialVersionUID = 1L;
	}

	public static class ImportedEmailPreview extends AbstractTableFieldBeanData {

		private static final long serialVersionUID = 1L;

		@Override
		public ImportedEmailPreviewRowData addRow() {
			return (ImportedEmailPreviewRowData) super.addRow();
		}

		@Override
		public ImportedEmailPreviewRowData addRow(int rowState) {
			return (ImportedEmailPreviewRowData) super.addRow(rowState);
		}

		@Override
		public ImportedEmailPreviewRowData createRow() {
			return new ImportedEmailPreviewRowData();
		}

		@Override
		public Class<? extends AbstractTableRowData> getRowType() {
			return ImportedEmailPreviewRowData.class;
		}

		@Override
		public ImportedEmailPreviewRowData[] getRows() {
			return (ImportedEmailPreviewRowData[]) super.getRows();
		}

		@Override
		public ImportedEmailPreviewRowData rowAt(int index) {
			return (ImportedEmailPreviewRowData) super.rowAt(index);
		}

		public void setRows(ImportedEmailPreviewRowData[] rows) {
			super.setRows(rows);
		}

		public static class ImportedEmailPreviewRowData extends AbstractTableRowData {

			private static final long serialVersionUID = 1L;
			public static final String emails = "emails";
			private String m_emails;

			public String getEmails() {
				return m_emails;
			}

			public void setEmails(String newEmails) {
				m_emails = newEmails;
			}
		}
	}

	public static class RawData extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class ValueSeparator extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}
}
